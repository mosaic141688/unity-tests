"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const parser_1 = require("../expression/parser");
const type_1 = require("../type");
/*
 * Extract all dependencies from transform options
 */
function extractDeps(options) {
    if (options.expression) {
        return parser_1.deps(options.expression);
    }
    else {
        return [];
    }
}
exports.extractDeps = extractDeps;
/*
 * Attempt to match value type with input and output types of transform
 * If value type can't be matched with input type we throw error
 */
function matchTypes(value_type, input_type, output_type) {
    return type_1.applyGenerics(value_type, input_type, output_type);
}
exports.matchTypes = matchTypes;
/*
 * # Expectations
 *
 * Any transform can specify which options it requires
 * by calling expectation function for this option.
 *
 * If option is not present we throw error.
 */
function expectExpression(options) {
    if (options.expression === undefined) {
        throw Error(`Expected 'expression' option`);
    }
    else {
        return options.expression;
    }
}
exports.expectExpression = expectExpression;
function expectOrder(options) {
    if (options.order === undefined) {
        return "asc";
    }
    else {
        return options.order;
    }
}
exports.expectOrder = expectOrder;
function expectAcc(options) {
    if (options.acc === undefined) {
        throw Error(`Expected 'acc' option`);
    }
    else {
        return options.acc;
    }
}
exports.expectAcc = expectAcc;
//# sourceMappingURL=any.js.map
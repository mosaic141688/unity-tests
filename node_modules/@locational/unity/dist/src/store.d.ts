import { EventEmitter } from 'eventemitter3';
import { TAnyValue } from './values/any';
import Unit, { IUnitConfig } from './unit';
export declare function valueTag(name: string): string;
export declare function valueName(name: string): string;
export declare function unitTag(name: string): string;
export declare function unitName(name: string): string;
export default class Store extends EventEmitter {
    private data;
    private deps;
    private units;
    private configs;
    constructor();
    lookup(name: string): TAnyValue;
    registerValue(name: string, value: TAnyValue): void;
    private markDependantUnitsAsDirty(name);
    lookupValue(name: string): TAnyValue;
    registerConfig(name: string, config: IUnitConfig): void;
    lookupConfig(name: string): IUnitConfig;
    startUnit(name: string): void;
    lookupUnit(name: string): Unit;
    private checkConfigDependencies(name, deps);
    run(): void;
}

import { Map } from 'immutable';
export declare type TTypeMap = Map<string, any>;
export declare type TTypeString = string;
export declare const BASIC_TYPES: string[];
export declare const CONTAINER_TYPES: string[];
export declare const ALL_TYPES: string[];
export interface ITypeMatch {
    input_type: TTypeString;
    output_type: TTypeString;
}
export declare function applyGenerics(value_type: TTypeString, input_type: TTypeString, output_type: TTypeString): ITypeMatch;
export declare function resolveTypes(ts_a: TTypeString, ts_b: TTypeString): TTypeString | null;
export declare function isGenericType(typemap: TTypeMap): boolean;
export declare function isBasicType(typemap: TTypeMap): boolean;
export declare function toTypeString(typemap: TTypeMap): string;
export declare function fromTypeString(type: string): TTypeMap;

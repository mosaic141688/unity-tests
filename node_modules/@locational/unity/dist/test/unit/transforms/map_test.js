"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = require("ava");
const any_1 = require("../../../src/values/any");
const map_1 = require("../../../src/transforms/map");
ava_1.test('mapTransform()', t => {
    // Throws when options does not have 'expression'
    t.throws(() => {
        map_1.default('[number]', {});
    });
    // Throws when value type does not match input type
    t.throws(() => {
        map_1.default('number', { expression: { dep: '$element' } });
    });
    const section = map_1.default('[number]', {
        expression: {
            plus: [
                { dep: '$element' },
                { value: 10 }
            ]
        }
    });
    t.is(section.input_type, '[number]');
    // TODO: Implement expression type inferrence
    t.is(section.output_type, '[b]');
    t.deepEqual(section.deps, []);
    t.truthy(section.transform(any_1.toValue([1, 4, 7, 2]), {})
        .equals(any_1.toValue([11, 14, 17, 12])));
});
//# sourceMappingURL=map_test.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = require("ava");
const unit_1 = require("../../src/unit");
const store_1 = require("../../src/store");
const any_1 = require("../../src/values/any");
ava_1.test('new Unit()', t => {
    const store = new store_1.default();
    const config = {
        input: { value: [1, 2, 3] },
        pipeline: [
            {
                type: 'where',
                options: {
                    expression: {
                        gt: [
                            { dep: '$element' },
                            { value: 1 }
                        ]
                    }
                }
            }
        ]
    };
    const unit = new unit_1.default(store, 'u1', config, []);
    t.is(unit.name, 'u1');
    t.truthy(unit.input.equals(any_1.toValue([1, 2, 3])));
    t.is(unit.output_type, '[number]');
    t.deepEqual(unit.deps, []);
    t.truthy(unit.run().equals(any_1.toValue([2, 3])));
});
ava_1.test('new Unit() without pipeline returns its input value', t => {
    const store = new store_1.default();
    const config = {
        input: { value: 1 },
        pipeline: []
    };
    store.registerConfig('u1', config);
    store.run();
    t.truthy(store.lookupUnit('u1').run().equals(any_1.toValue(1)));
});
ava_1.test('new Unit() can resolve dependencies', t => {
    const store = new store_1.default();
    store.registerValue('min_num', any_1.toValue(1));
    const config = {
        input: { value: [1, 2, 3] },
        pipeline: [
            {
                type: 'where',
                options: {
                    expression: {
                        gt: [
                            { dep: '$element' },
                            { dep: '@min_num' }
                        ]
                    }
                }
            }
        ]
    };
    const unit = new unit_1.default(store, 'u1', config, ['@min_num']);
    t.truthy(unit.run().equals(any_1.toValue([2, 3])));
});
//# sourceMappingURL=unit_test.js.map
{"version":3,"sources":["unity-tets.js"],"names":["unity","require","store","Store","registerValue","value","name","surname","age","config_a","input","pipeline","type","options","expression","gt","dep","t","actual","expected","lookupValue","console","log","deepEqual","registerConfig","run","true"],"mappings":";;;;AAAA;;;;;;AACA,IAAIA,QAAQC,QAAQ,mBAAR,CAAZ;AACA,MAAMC,QAAQ,IAAIF,MAAMG,KAAV,EAAd;;AAEAD,MAAME,aAAN,CAAoB,cAApB,EAAmCJ,MAAMK,KAAN,CAAY,CAAZ,CAAnC;AACAH,MAAME,aAAN,CAAoB,OAApB,EAA4B,CACxB;AACIE,UAAK,OADT;AAEIC,aAAQ,UAFZ;AAGIC,SAAI;AAHR,CADwB,EAMxB;AACIF,UAAK,MADT;AAEIC,aAAQ,QAFZ;AAGIC,SAAI;AAHR,CANwB,CAA5B;;AAcA,MAAMC,WAAW;AACbC,WAAO,EAAEL,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAT,EADM;AAEbM,cAAU,CACN;AACIC,cAAM,OADV;AAEIC,iBAAS;AACLC,wBAAY;AACRC,oBAAI,CACA,EAAEC,KAAK,UAAP,EADA,EAEA,EAAEA,KAAK,eAAP,EAFA;AADI;AADP;AAFb,KADM;AAFG,CAAjB;;AAoBA,mBAAK,iCAAL,EAAuCC,KAAK;AAC1C,QAAIC,SAASlB,MAAMK,KAAN,CAAY,CAAZ,CAAb;AACA,QAAIc,WAAWjB,MAAMkB,WAAN,CAAkB,cAAlB,CAAf;AACAC,YAAQC,GAAR,CAAYH,QAAZ;AACAF,MAAEM,SAAF,CAAYL,MAAZ,EAAoBC,QAApB;AACD,CALD;;AAOA,mBAAK,oBAAL,EAA0BF,KAAK;AAC3B,QAAIC,SAAS,CACT;AACIZ,cAAK,OADT;AAEIC,iBAAQ,UAFZ;AAGIC,aAAI;AAHR,KADS,EAMT;AACIF,cAAK,MADT;AAEIC,iBAAQ,QAFZ;AAGIC,aAAI;AAHR,KANS,CAAb;AAYA,QAAIW,WAAWjB,MAAMkB,WAAN,CAAkB,OAAlB,CAAf;AACAH,MAAEM,SAAF,CAAYL,MAAZ,EAAoBC,QAApB;AACH,CAfD;;AAiBA,mBAAK,cAAL,EAAqBF,KAAK;AACtBf,UAAMsB,cAAN,CAAqB,UAArB,EAAgCf,QAAhC;;AAEAP,UAAMsB,cAAN,CAAqB,IAArB,EAA2Bf,QAA3B;AACAY,YAAQC,GAAR,CAAYpB,MAAMuB,GAAN,CAAU,IAAV,CAAZ;AACAR,MAAES,IAAF,CAAO,IAAP;AACH,CAND","file":"unity-tets.js","sourcesContent":["import test from 'ava'\nvar unity = require('@locational/unity')\nconst store = new unity.Store()\n\nstore.registerValue('number_value',unity.value(9))\nstore.registerValue('table',[\n    {\n        name:'Sihle',\n        surname:'Mbhamali',\n        age:9\n    },\n    {\n        name:'John',\n        surname:'Smithi',\n        age:10\n    }\n])\n\n\nconst config_a = {\n    input: { value: [1, 2, 3] },\n    pipeline: [\n        {\n            type: 'where',\n            options: {\n                expression: {\n                    gt: [\n                        { dep: '$element' },\n                        { dep: '@number_value' }\n                    ]\n                }\n            }\n        }\n    ]\n};\n\n\n\n\ntest('Store Register and lookup Value',t => {\n  let actual = unity.value(9);\n  let expected = store.lookupValue('number_value')\n  console.log(expected)\n  t.deepEqual(actual, expected)  \n})\n\ntest('Store lookup table',t => {\n    let actual = [\n        {\n            name:'Sihle',\n            surname:'Mbhamali',\n            age:9\n        },\n        {\n            name:'John',\n            surname:'Smithi',\n            age:10\n        }\n    ]\n    let expected = store.lookupValue('table')\n    t.deepEqual(actual, expected)  \n})\n\ntest('Store Config', t => {\n    store.registerConfig('config_a',config_a)\n    \n    store.registerConfig('u1', config_a)\n    console.log(store.run('u1'))\n    t.true(true)\n})"]}